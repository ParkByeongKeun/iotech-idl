
syntax = "proto3";

import "google/api/annotations.proto";

option go_package = "github.com/ParkByeongKeun/iotech-idl/maincontrol";
option java_multiple_files = true;
option java_package = "net.ijoon.iotech.main_control";
option java_outer_classname = "MainControlProto";

package maincontrol;

service MainControl {
  
  rpc CreateDevice(CreateDeviceRequest) returns (CreateDeviceResponse) {
    option (google.api.http) = {
      post: "/api/main/v1/device"
      body: "*"
  };
  }
  rpc ReadDevice(ReadDeviceRequest) returns (ReadDeviceResponse) {
    option (google.api.http) = {
      get: "/api/main/v1/device"
  };
  }
  rpc ReadDeviceList(ReadDeviceListRequest) returns (ReadDeviceListResponse) {
    option (google.api.http) = {
      get: "/api/main/v1/device_list"
  };
  }
  rpc UpdateDevice(UpdateDeviceRequest) returns (UpdateDeviceResponse) {
    option (google.api.http) = {
      put: "/api/main/v1/device"
      body: "*"
    };
  }
  rpc DeleteDevice(DeleteDeviceRequest) returns (DeleteDeviceResponse) {
    option (google.api.http) = {
      delete: "/api/main/v1/device"
      body: "*"
    };
  }
  rpc ReadPowerDataList(ReadPowerDataListRequest) returns (ReadPowerDataListResponse) {
    option (google.api.http) = {
      get: "/api/main/v1/power_data_list"
  };
  }


  rpc ReadMomentDataList(ReadMomentDataListRequest) returns (ReadMomentDataListResponse) {
    option (google.api.http) = {
      get: "/api/main/v1/moment_data_list"
  };
  }

  // rpc ReadPowerCompare(ReadPowerCompareRequest) returns (ReadPowerCompareResponse) {
  //   option (google.api.http) = {
  //     get: "/api/main/v1/power_compare"
  // };
  // }

  // rpc ReadMomentCompare(ReadMomentCompareRequest) returns (ReadMomentCompareResponse) {
  //   option (google.api.http) = {
  //     get: "/api/main/v1/moment_compare"
  // };
  // }
}

message Device {
  string name = 1;
  string mac = 2;
  string customer_id = 3;
  string manufacturer_id = 4;
  string reading_date = 5;
  string install_addr = 6;
  string net_ip = 7;
}

message CreateDeviceRequest {
  string name = 1;
  string mac = 2;
  string customer_id = 3;
  string manufacturer_id = 4;
  string install_addr = 5;
}

message CreateDeviceResponse {
  string mac = 1;
}

message UpdateDeviceRequest {
  string name = 1;
  string mac = 2;
  string customer_id = 3;
  string manufacturer_id = 4;
}

message UpdateDeviceResponse {
  string mac = 3;
}

message DeleteDeviceRequest {
  string mac = 1;
}
message DeleteDeviceResponse {

}

message ReadDeviceRequest {
  string mac = 1;
}
message ReadDeviceResponse {
  Device device = 1;
}

message ReadDeviceListRequest {
  string install_addr = 1; 
}
message ReadDeviceListResponse {
  repeated Device device_list = 1;
}

enum Event {
  BATTERY = 0; //배터리감지
  LOW_VOLTAGE = 1; //배터리 저전압
  COVER_OPEN = 2; //커버열림
  MAGNETIC_DETECTION = 3; //자계감지
}


message PowerData { //전력량
  float apparent_power = 1; //피상전력
  float active_power = 2; //유효전력
  float ground_reactive_power = 3; //지상 무효전력
  float truth_reactive_power  = 4; //진상 무효전력
  float power_factor = 5;
  repeated Event event = 6; //이벤트
  string utc = 7;
}


message ReadPowerDataListRequest {
  repeated string customer_id = 1;
  string prev_date = 2;
  string next_date = 3;
  uint64 interval = 4;
}
message ReadPowerDataListResponse {
  repeated PowerData power_data_list = 1;
}


// message ReadPowerCompareRequest {
//   repeated string customer_id = 1;
//   string type = 2; 
// }
// message ReadPowerCompareResponse {
//   repeated PowerData power_data_list = 1;
//   repeated PowerData prev1_data_list = 2;
//   repeated PowerData prev2_data_list = 3;
// }

message MomentData { //순시값
  float current_a = 1;
  float voltage_a = 2;
  float voltage_thd_a = 3;
  float power_factor_a = 4;
  float phase_a = 5;
  float current_b = 6;
  float voltage_b = 7;
  float voltage_thd_b = 8;
  float power_factor_b = 9;
  float phase_b = 10;
  float current_c = 11;
  float voltage_c = 12;
  float voltage_thd_c = 13;
  float power_factor_c = 14;
  float phase_c = 15;
  float temp = 16;
}


message ReadMomentDataListRequest {
  repeated string customer_id = 1;
  string prev_date = 2;
  string next_date = 3;
  uint64 interval = 4;
}
message ReadMomentDataListResponse {
  repeated MomentData moment_data_list = 1;
}

// message ReadMomentCompareRequest {
//   repeated string customer_id = 1;
//   string type = 2; 
// }
// message ReadMomentCompareResponse {
//   repeated MomentData moment_data_list = 1;
//   repeated MomentData prev1_data_list = 2;
//   repeated MomentData prev2_data_list = 3;
// }