// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.14.0
// source: main_control.proto

package maincontrol

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SensorStatus int32

const (
	SensorStatus_SENSOR_STATUS_DEFAULT    SensorStatus = 0
	SensorStatus_SENSOR_STATUS_INSPECTION SensorStatus = 1
)

// Enum value maps for SensorStatus.
var (
	SensorStatus_name = map[int32]string{
		0: "SENSOR_STATUS_DEFAULT",
		1: "SENSOR_STATUS_INSPECTION",
	}
	SensorStatus_value = map[string]int32{
		"SENSOR_STATUS_DEFAULT":    0,
		"SENSOR_STATUS_INSPECTION": 1,
	}
)

func (x SensorStatus) Enum() *SensorStatus {
	p := new(SensorStatus)
	*p = x
	return p
}

func (x SensorStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SensorStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_main_control_proto_enumTypes[0].Descriptor()
}

func (SensorStatus) Type() protoreflect.EnumType {
	return &file_main_control_proto_enumTypes[0]
}

func (x SensorStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SensorStatus.Descriptor instead.
func (SensorStatus) EnumDescriptor() ([]byte, []int) {
	return file_main_control_proto_rawDescGZIP(), []int{0}
}

type Event int32

const (
	Event_POWER_FACTOR  Event = 0 //역률
	Event_VOLTAGE_DROP  Event = 1 //전압강하
	Event_SHORT_CIRCUIT Event = 2 //누전
	Event_OVERCURRENT   Event = 3 //과전류
	Event_OVERVOLTAGE   Event = 4 //과전압
	Event_ARC           Event = 5 //아크
)

// Enum value maps for Event.
var (
	Event_name = map[int32]string{
		0: "POWER_FACTOR",
		1: "VOLTAGE_DROP",
		2: "SHORT_CIRCUIT",
		3: "OVERCURRENT",
		4: "OVERVOLTAGE",
		5: "ARC",
	}
	Event_value = map[string]int32{
		"POWER_FACTOR":  0,
		"VOLTAGE_DROP":  1,
		"SHORT_CIRCUIT": 2,
		"OVERCURRENT":   3,
		"OVERVOLTAGE":   4,
		"ARC":           5,
	}
)

func (x Event) Enum() *Event {
	p := new(Event)
	*p = x
	return p
}

func (x Event) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Event) Descriptor() protoreflect.EnumDescriptor {
	return file_main_control_proto_enumTypes[1].Descriptor()
}

func (Event) Type() protoreflect.EnumType {
	return &file_main_control_proto_enumTypes[1]
}

func (x Event) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Event.Descriptor instead.
func (Event) EnumDescriptor() ([]byte, []int) {
	return file_main_control_proto_rawDescGZIP(), []int{1}
}

type Sensor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Serial         string       `protobuf:"bytes,2,opt,name=serial,proto3" json:"serial,omitempty"`
	Mac            string       `protobuf:"bytes,3,opt,name=mac,proto3" json:"mac,omitempty"`
	Usage          string       `protobuf:"bytes,4,opt,name=usage,proto3" json:"usage,omitempty"`
	InstallAddr    string       `protobuf:"bytes,5,opt,name=install_addr,json=installAddr,proto3" json:"install_addr,omitempty"`
	RegisteredTime string       `protobuf:"bytes,6,opt,name=registered_time,json=registeredTime,proto3" json:"registered_time,omitempty"`
	SensorStatus   SensorStatus `protobuf:"varint,7,opt,name=sensorStatus,proto3,enum=maincontrol.SensorStatus" json:"sensorStatus,omitempty"`
	Note           string       `protobuf:"bytes,8,opt,name=note,proto3" json:"note,omitempty"`
}

func (x *Sensor) Reset() {
	*x = Sensor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_control_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sensor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sensor) ProtoMessage() {}

func (x *Sensor) ProtoReflect() protoreflect.Message {
	mi := &file_main_control_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sensor.ProtoReflect.Descriptor instead.
func (*Sensor) Descriptor() ([]byte, []int) {
	return file_main_control_proto_rawDescGZIP(), []int{0}
}

func (x *Sensor) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Sensor) GetSerial() string {
	if x != nil {
		return x.Serial
	}
	return ""
}

func (x *Sensor) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *Sensor) GetUsage() string {
	if x != nil {
		return x.Usage
	}
	return ""
}

func (x *Sensor) GetInstallAddr() string {
	if x != nil {
		return x.InstallAddr
	}
	return ""
}

func (x *Sensor) GetRegisteredTime() string {
	if x != nil {
		return x.RegisteredTime
	}
	return ""
}

func (x *Sensor) GetSensorStatus() SensorStatus {
	if x != nil {
		return x.SensorStatus
	}
	return SensorStatus_SENSOR_STATUS_DEFAULT
}

func (x *Sensor) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

// 특정 sensor 가져오기
type ReadSensorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SensorId string `protobuf:"bytes,1,opt,name=sensor_id,json=sensorId,proto3" json:"sensor_id,omitempty"`
}

func (x *ReadSensorRequest) Reset() {
	*x = ReadSensorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_control_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadSensorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadSensorRequest) ProtoMessage() {}

func (x *ReadSensorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_main_control_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadSensorRequest.ProtoReflect.Descriptor instead.
func (*ReadSensorRequest) Descriptor() ([]byte, []int) {
	return file_main_control_proto_rawDescGZIP(), []int{1}
}

func (x *ReadSensorRequest) GetSensorId() string {
	if x != nil {
		return x.SensorId
	}
	return ""
}

type ReadSensorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sensor *Sensor `protobuf:"bytes,1,opt,name=sensor,proto3" json:"sensor,omitempty"`
}

func (x *ReadSensorResponse) Reset() {
	*x = ReadSensorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_control_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadSensorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadSensorResponse) ProtoMessage() {}

func (x *ReadSensorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_main_control_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadSensorResponse.ProtoReflect.Descriptor instead.
func (*ReadSensorResponse) Descriptor() ([]byte, []int) {
	return file_main_control_proto_rawDescGZIP(), []int{2}
}

func (x *ReadSensorResponse) GetSensor() *Sensor {
	if x != nil {
		return x.Sensor
	}
	return nil
}

// sensor list 가져오기
type ReadSensorListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReadSensorListRequest) Reset() {
	*x = ReadSensorListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_control_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadSensorListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadSensorListRequest) ProtoMessage() {}

func (x *ReadSensorListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_main_control_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadSensorListRequest.ProtoReflect.Descriptor instead.
func (*ReadSensorListRequest) Descriptor() ([]byte, []int) {
	return file_main_control_proto_rawDescGZIP(), []int{3}
}

type ReadSensorListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SensorList []*Sensor `protobuf:"bytes,1,rep,name=sensor_list,json=sensorList,proto3" json:"sensor_list,omitempty"`
}

func (x *ReadSensorListResponse) Reset() {
	*x = ReadSensorListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_control_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadSensorListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadSensorListResponse) ProtoMessage() {}

func (x *ReadSensorListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_main_control_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadSensorListResponse.ProtoReflect.Descriptor instead.
func (*ReadSensorListResponse) Descriptor() ([]byte, []int) {
	return file_main_control_proto_rawDescGZIP(), []int{4}
}

func (x *ReadSensorListResponse) GetSensorList() []*Sensor {
	if x != nil {
		return x.SensorList
	}
	return nil
}

type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PowerFactor   float32 `protobuf:"fixed32,1,opt,name=power_factor,json=powerFactor,proto3" json:"power_factor,omitempty"`       //역률
	ReactivePower float32 `protobuf:"fixed32,2,opt,name=reactive_power,json=reactivePower,proto3" json:"reactive_power,omitempty"` //무효전력
	RactivePower  float32 `protobuf:"fixed32,3,opt,name=ractive_power,json=ractivePower,proto3" json:"ractive_power,omitempty"`    //유효전력
	Voltage       float32 `protobuf:"fixed32,4,opt,name=voltage,proto3" json:"voltage,omitempty"`                                  //전압
	Frequency     float32 `protobuf:"fixed32,5,opt,name=frequency,proto3" json:"frequency,omitempty"`                              //주파수
	Event         Event   `protobuf:"varint,6,opt,name=event,proto3,enum=maincontrol.Event" json:"event,omitempty"`                //이벤트
	Utc           string  `protobuf:"bytes,7,opt,name=utc,proto3" json:"utc,omitempty"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_control_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_main_control_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_main_control_proto_rawDescGZIP(), []int{5}
}

func (x *Data) GetPowerFactor() float32 {
	if x != nil {
		return x.PowerFactor
	}
	return 0
}

func (x *Data) GetReactivePower() float32 {
	if x != nil {
		return x.ReactivePower
	}
	return 0
}

func (x *Data) GetRactivePower() float32 {
	if x != nil {
		return x.RactivePower
	}
	return 0
}

func (x *Data) GetVoltage() float32 {
	if x != nil {
		return x.Voltage
	}
	return 0
}

func (x *Data) GetFrequency() float32 {
	if x != nil {
		return x.Frequency
	}
	return 0
}

func (x *Data) GetEvent() Event {
	if x != nil {
		return x.Event
	}
	return Event_POWER_FACTOR
}

func (x *Data) GetUtc() string {
	if x != nil {
		return x.Utc
	}
	return ""
}

type ReadDataListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SensorSerial string `protobuf:"bytes,1,opt,name=sensor_serial,json=sensorSerial,proto3" json:"sensor_serial,omitempty"`
	PrevDate     string `protobuf:"bytes,2,opt,name=prev_date,json=prevDate,proto3" json:"prev_date,omitempty"`
	NextDate     string `protobuf:"bytes,3,opt,name=next_date,json=nextDate,proto3" json:"next_date,omitempty"`
	Interval     uint64 `protobuf:"varint,4,opt,name=interval,proto3" json:"interval,omitempty"`
}

func (x *ReadDataListRequest) Reset() {
	*x = ReadDataListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_control_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadDataListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadDataListRequest) ProtoMessage() {}

func (x *ReadDataListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_main_control_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadDataListRequest.ProtoReflect.Descriptor instead.
func (*ReadDataListRequest) Descriptor() ([]byte, []int) {
	return file_main_control_proto_rawDescGZIP(), []int{6}
}

func (x *ReadDataListRequest) GetSensorSerial() string {
	if x != nil {
		return x.SensorSerial
	}
	return ""
}

func (x *ReadDataListRequest) GetPrevDate() string {
	if x != nil {
		return x.PrevDate
	}
	return ""
}

func (x *ReadDataListRequest) GetNextDate() string {
	if x != nil {
		return x.NextDate
	}
	return ""
}

func (x *ReadDataListRequest) GetInterval() uint64 {
	if x != nil {
		return x.Interval
	}
	return 0
}

type ReadDataListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataList []*Data `protobuf:"bytes,1,rep,name=data_list,json=dataList,proto3" json:"data_list,omitempty"`
}

func (x *ReadDataListResponse) Reset() {
	*x = ReadDataListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_control_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadDataListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadDataListResponse) ProtoMessage() {}

func (x *ReadDataListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_main_control_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadDataListResponse.ProtoReflect.Descriptor instead.
func (*ReadDataListResponse) Descriptor() ([]byte, []int) {
	return file_main_control_proto_rawDescGZIP(), []int{7}
}

func (x *ReadDataListResponse) GetDataList() []*Data {
	if x != nil {
		return x.DataList
	}
	return nil
}

var File_main_control_proto protoreflect.FileDescriptor

var file_main_control_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xf7, 0x01, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x61, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x12, 0x27, 0x0a,
	0x0f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x53, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x22, 0x30, 0x0a, 0x11, 0x52, 0x65, 0x61,
	0x64, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x12, 0x52,
	0x65, 0x61, 0x64, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e,
	0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x22, 0x17,
	0x0a, 0x15, 0x52, 0x65, 0x61, 0x64, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4e, 0x0a, 0x16, 0x52, 0x65, 0x61, 0x64, 0x53,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x34, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x52, 0x0a, 0x73, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xe9, 0x01, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x46, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x72, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0c, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x07, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x66, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x74, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x74, 0x63, 0x22, 0x90, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x65, 0x76, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x22, 0x46, 0x0a, 0x14, 0x52, 0x65, 0x61, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e,
	0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x2a, 0x47,
	0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19,
	0x0a, 0x15, 0x53, 0x45, 0x4e, 0x53, 0x4f, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x45, 0x4e,
	0x53, 0x4f, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x2a, 0x69, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x10, 0x0a, 0x0c, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x5f, 0x46, 0x41, 0x43, 0x54, 0x4f, 0x52,
	0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x56, 0x4f, 0x4c, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x44, 0x52,
	0x4f, 0x50, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x48, 0x4f, 0x52, 0x54, 0x5f, 0x43, 0x49,
	0x52, 0x43, 0x55, 0x49, 0x54, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x56, 0x45, 0x52, 0x43,
	0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x56, 0x45, 0x52,
	0x56, 0x4f, 0x4c, 0x54, 0x41, 0x47, 0x45, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x52, 0x43,
	0x10, 0x05, 0x32, 0xeb, 0x02, 0x0a, 0x0b, 0x4d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x12, 0x6a, 0x0a, 0x0a, 0x52, 0x65, 0x61, 0x64, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x12, 0x1e, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x52,
	0x65, 0x61, 0x64, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x52,
	0x65, 0x61, 0x64, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x12, 0x7b,
	0x0a, 0x0e, 0x52, 0x65, 0x61, 0x64, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x22, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x52,
	0x65, 0x61, 0x64, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1a, 0x12, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x73, 0x0a, 0x0c, 0x52,
	0x65, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x6d, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x61, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d,
	0x61, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x42, 0x65, 0x0a, 0x1d, 0x6e, 0x65, 0x74, 0x2e, 0x69, 0x6a, 0x6f, 0x6f, 0x6e, 0x2e, 0x69, 0x6f,
	0x74, 0x65, 0x63, 0x68, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x42, 0x10, 0x4d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x50, 0x61, 0x72, 0x6b, 0x42, 0x79, 0x65, 0x6f, 0x6e, 0x67, 0x4b, 0x65, 0x75, 0x6e,
	0x2f, 0x69, 0x6f, 0x74, 0x65, 0x63, 0x68, 0x2d, 0x69, 0x64, 0x6c, 0x2f, 0x6d, 0x61, 0x69, 0x6e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_main_control_proto_rawDescOnce sync.Once
	file_main_control_proto_rawDescData = file_main_control_proto_rawDesc
)

func file_main_control_proto_rawDescGZIP() []byte {
	file_main_control_proto_rawDescOnce.Do(func() {
		file_main_control_proto_rawDescData = protoimpl.X.CompressGZIP(file_main_control_proto_rawDescData)
	})
	return file_main_control_proto_rawDescData
}

var file_main_control_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_main_control_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_main_control_proto_goTypes = []interface{}{
	(SensorStatus)(0),              // 0: maincontrol.SensorStatus
	(Event)(0),                     // 1: maincontrol.Event
	(*Sensor)(nil),                 // 2: maincontrol.Sensor
	(*ReadSensorRequest)(nil),      // 3: maincontrol.ReadSensorRequest
	(*ReadSensorResponse)(nil),     // 4: maincontrol.ReadSensorResponse
	(*ReadSensorListRequest)(nil),  // 5: maincontrol.ReadSensorListRequest
	(*ReadSensorListResponse)(nil), // 6: maincontrol.ReadSensorListResponse
	(*Data)(nil),                   // 7: maincontrol.Data
	(*ReadDataListRequest)(nil),    // 8: maincontrol.ReadDataListRequest
	(*ReadDataListResponse)(nil),   // 9: maincontrol.ReadDataListResponse
}
var file_main_control_proto_depIdxs = []int32{
	0, // 0: maincontrol.Sensor.sensorStatus:type_name -> maincontrol.SensorStatus
	2, // 1: maincontrol.ReadSensorResponse.sensor:type_name -> maincontrol.Sensor
	2, // 2: maincontrol.ReadSensorListResponse.sensor_list:type_name -> maincontrol.Sensor
	1, // 3: maincontrol.Data.event:type_name -> maincontrol.Event
	7, // 4: maincontrol.ReadDataListResponse.data_list:type_name -> maincontrol.Data
	3, // 5: maincontrol.MainControl.ReadSensor:input_type -> maincontrol.ReadSensorRequest
	5, // 6: maincontrol.MainControl.ReadSensorList:input_type -> maincontrol.ReadSensorListRequest
	8, // 7: maincontrol.MainControl.ReadDataList:input_type -> maincontrol.ReadDataListRequest
	4, // 8: maincontrol.MainControl.ReadSensor:output_type -> maincontrol.ReadSensorResponse
	6, // 9: maincontrol.MainControl.ReadSensorList:output_type -> maincontrol.ReadSensorListResponse
	9, // 10: maincontrol.MainControl.ReadDataList:output_type -> maincontrol.ReadDataListResponse
	8, // [8:11] is the sub-list for method output_type
	5, // [5:8] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_main_control_proto_init() }
func file_main_control_proto_init() {
	if File_main_control_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_main_control_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sensor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_control_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadSensorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_control_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadSensorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_control_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadSensorListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_control_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadSensorListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_control_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_control_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadDataListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_control_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadDataListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_main_control_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_main_control_proto_goTypes,
		DependencyIndexes: file_main_control_proto_depIdxs,
		EnumInfos:         file_main_control_proto_enumTypes,
		MessageInfos:      file_main_control_proto_msgTypes,
	}.Build()
	File_main_control_proto = out.File
	file_main_control_proto_rawDesc = nil
	file_main_control_proto_goTypes = nil
	file_main_control_proto_depIdxs = nil
}
