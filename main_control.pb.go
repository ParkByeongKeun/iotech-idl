// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v5.26.1
// source: main_control.proto

package maincontrol

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Event int32

const (
	Event_BATTERY            Event = 0 //배터리감지
	Event_LOW_VOLTAGE        Event = 1 //배터리 저전압
	Event_COVER_OPEN         Event = 2 //커버열림
	Event_MAGNETIC_DETECTION Event = 3 //자계감지
)

// Enum value maps for Event.
var (
	Event_name = map[int32]string{
		0: "BATTERY",
		1: "LOW_VOLTAGE",
		2: "COVER_OPEN",
		3: "MAGNETIC_DETECTION",
	}
	Event_value = map[string]int32{
		"BATTERY":            0,
		"LOW_VOLTAGE":        1,
		"COVER_OPEN":         2,
		"MAGNETIC_DETECTION": 3,
	}
)

func (x Event) Enum() *Event {
	p := new(Event)
	*p = x
	return p
}

func (x Event) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Event) Descriptor() protoreflect.EnumDescriptor {
	return file_main_control_proto_enumTypes[0].Descriptor()
}

func (Event) Type() protoreflect.EnumType {
	return &file_main_control_proto_enumTypes[0]
}

func (x Event) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Event.Descriptor instead.
func (Event) EnumDescriptor() ([]byte, []int) {
	return file_main_control_proto_rawDescGZIP(), []int{0}
}

type Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Mac            string `protobuf:"bytes,2,opt,name=mac,proto3" json:"mac,omitempty"`
	CustomerId     string `protobuf:"bytes,3,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	ManufacturerId string `protobuf:"bytes,4,opt,name=manufacturer_id,json=manufacturerId,proto3" json:"manufacturer_id,omitempty"`
	ReadingDate    string `protobuf:"bytes,5,opt,name=reading_date,json=readingDate,proto3" json:"reading_date,omitempty"`
	InstallAddr    string `protobuf:"bytes,6,opt,name=install_addr,json=installAddr,proto3" json:"install_addr,omitempty"`
	NetIp          string `protobuf:"bytes,7,opt,name=net_ip,json=netIp,proto3" json:"net_ip,omitempty"`
}

func (x *Device) Reset() {
	*x = Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_control_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_main_control_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_main_control_proto_rawDescGZIP(), []int{0}
}

func (x *Device) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Device) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *Device) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *Device) GetManufacturerId() string {
	if x != nil {
		return x.ManufacturerId
	}
	return ""
}

func (x *Device) GetReadingDate() string {
	if x != nil {
		return x.ReadingDate
	}
	return ""
}

func (x *Device) GetInstallAddr() string {
	if x != nil {
		return x.InstallAddr
	}
	return ""
}

func (x *Device) GetNetIp() string {
	if x != nil {
		return x.NetIp
	}
	return ""
}

type CreateDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Mac            string `protobuf:"bytes,2,opt,name=mac,proto3" json:"mac,omitempty"`
	CustomerId     string `protobuf:"bytes,3,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	ManufacturerId string `protobuf:"bytes,4,opt,name=manufacturer_id,json=manufacturerId,proto3" json:"manufacturer_id,omitempty"`
}

func (x *CreateDeviceRequest) Reset() {
	*x = CreateDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_control_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceRequest) ProtoMessage() {}

func (x *CreateDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_main_control_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceRequest.ProtoReflect.Descriptor instead.
func (*CreateDeviceRequest) Descriptor() ([]byte, []int) {
	return file_main_control_proto_rawDescGZIP(), []int{1}
}

func (x *CreateDeviceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateDeviceRequest) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *CreateDeviceRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *CreateDeviceRequest) GetManufacturerId() string {
	if x != nil {
		return x.ManufacturerId
	}
	return ""
}

type CreateDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
}

func (x *CreateDeviceResponse) Reset() {
	*x = CreateDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_control_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceResponse) ProtoMessage() {}

func (x *CreateDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_main_control_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceResponse.ProtoReflect.Descriptor instead.
func (*CreateDeviceResponse) Descriptor() ([]byte, []int) {
	return file_main_control_proto_rawDescGZIP(), []int{2}
}

func (x *CreateDeviceResponse) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

type UpdateDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Mac            string `protobuf:"bytes,2,opt,name=mac,proto3" json:"mac,omitempty"`
	CustomerId     string `protobuf:"bytes,3,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	ManufacturerId string `protobuf:"bytes,4,opt,name=manufacturer_id,json=manufacturerId,proto3" json:"manufacturer_id,omitempty"`
}

func (x *UpdateDeviceRequest) Reset() {
	*x = UpdateDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_control_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceRequest) ProtoMessage() {}

func (x *UpdateDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_main_control_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceRequest.ProtoReflect.Descriptor instead.
func (*UpdateDeviceRequest) Descriptor() ([]byte, []int) {
	return file_main_control_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateDeviceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateDeviceRequest) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *UpdateDeviceRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *UpdateDeviceRequest) GetManufacturerId() string {
	if x != nil {
		return x.ManufacturerId
	}
	return ""
}

type UpdateDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId string `protobuf:"bytes,3,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
}

func (x *UpdateDeviceResponse) Reset() {
	*x = UpdateDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_control_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceResponse) ProtoMessage() {}

func (x *UpdateDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_main_control_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceResponse.ProtoReflect.Descriptor instead.
func (*UpdateDeviceResponse) Descriptor() ([]byte, []int) {
	return file_main_control_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateDeviceResponse) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

type DeleteDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
}

func (x *DeleteDeviceRequest) Reset() {
	*x = DeleteDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_control_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDeviceRequest) ProtoMessage() {}

func (x *DeleteDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_main_control_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDeviceRequest.ProtoReflect.Descriptor instead.
func (*DeleteDeviceRequest) Descriptor() ([]byte, []int) {
	return file_main_control_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteDeviceRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

type DeleteDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteDeviceResponse) Reset() {
	*x = DeleteDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_control_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDeviceResponse) ProtoMessage() {}

func (x *DeleteDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_main_control_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDeviceResponse.ProtoReflect.Descriptor instead.
func (*DeleteDeviceResponse) Descriptor() ([]byte, []int) {
	return file_main_control_proto_rawDescGZIP(), []int{6}
}

type ReadDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
}

func (x *ReadDeviceRequest) Reset() {
	*x = ReadDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_control_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadDeviceRequest) ProtoMessage() {}

func (x *ReadDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_main_control_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadDeviceRequest.ProtoReflect.Descriptor instead.
func (*ReadDeviceRequest) Descriptor() ([]byte, []int) {
	return file_main_control_proto_rawDescGZIP(), []int{7}
}

func (x *ReadDeviceRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

type ReadDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device *Device `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
}

func (x *ReadDeviceResponse) Reset() {
	*x = ReadDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_control_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadDeviceResponse) ProtoMessage() {}

func (x *ReadDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_main_control_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadDeviceResponse.ProtoReflect.Descriptor instead.
func (*ReadDeviceResponse) Descriptor() ([]byte, []int) {
	return file_main_control_proto_rawDescGZIP(), []int{8}
}

func (x *ReadDeviceResponse) GetDevice() *Device {
	if x != nil {
		return x.Device
	}
	return nil
}

type ReadDeviceListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReadDeviceListRequest) Reset() {
	*x = ReadDeviceListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_control_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadDeviceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadDeviceListRequest) ProtoMessage() {}

func (x *ReadDeviceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_main_control_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadDeviceListRequest.ProtoReflect.Descriptor instead.
func (*ReadDeviceListRequest) Descriptor() ([]byte, []int) {
	return file_main_control_proto_rawDescGZIP(), []int{9}
}

type ReadDeviceListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceList []*Device `protobuf:"bytes,1,rep,name=device_list,json=deviceList,proto3" json:"device_list,omitempty"`
}

func (x *ReadDeviceListResponse) Reset() {
	*x = ReadDeviceListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_control_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadDeviceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadDeviceListResponse) ProtoMessage() {}

func (x *ReadDeviceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_main_control_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadDeviceListResponse.ProtoReflect.Descriptor instead.
func (*ReadDeviceListResponse) Descriptor() ([]byte, []int) {
	return file_main_control_proto_rawDescGZIP(), []int{10}
}

func (x *ReadDeviceListResponse) GetDeviceList() []*Device {
	if x != nil {
		return x.DeviceList
	}
	return nil
}

type PowerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApparentPower       float32 `protobuf:"fixed32,1,opt,name=apparent_power,json=apparentPower,proto3" json:"apparent_power,omitempty"`                     //피상전력
	ActivePower         float32 `protobuf:"fixed32,2,opt,name=active_power,json=activePower,proto3" json:"active_power,omitempty"`                           //유효전력
	GroundReactivePower float32 `protobuf:"fixed32,3,opt,name=ground_reactive_power,json=groundReactivePower,proto3" json:"ground_reactive_power,omitempty"` //지상 무효전력
	TruthReactivePower  float32 `protobuf:"fixed32,4,opt,name=truth_reactive_power,json=truthReactivePower,proto3" json:"truth_reactive_power,omitempty"`    //진상 무효전력
	PowerFactor         float32 `protobuf:"fixed32,5,opt,name=power_factor,json=powerFactor,proto3" json:"power_factor,omitempty"`
	Event               []Event `protobuf:"varint,6,rep,packed,name=event,proto3,enum=maincontrol.Event" json:"event,omitempty"` //이벤트
	Utc                 string  `protobuf:"bytes,7,opt,name=utc,proto3" json:"utc,omitempty"`
}

func (x *PowerData) Reset() {
	*x = PowerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_control_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PowerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PowerData) ProtoMessage() {}

func (x *PowerData) ProtoReflect() protoreflect.Message {
	mi := &file_main_control_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PowerData.ProtoReflect.Descriptor instead.
func (*PowerData) Descriptor() ([]byte, []int) {
	return file_main_control_proto_rawDescGZIP(), []int{11}
}

func (x *PowerData) GetApparentPower() float32 {
	if x != nil {
		return x.ApparentPower
	}
	return 0
}

func (x *PowerData) GetActivePower() float32 {
	if x != nil {
		return x.ActivePower
	}
	return 0
}

func (x *PowerData) GetGroundReactivePower() float32 {
	if x != nil {
		return x.GroundReactivePower
	}
	return 0
}

func (x *PowerData) GetTruthReactivePower() float32 {
	if x != nil {
		return x.TruthReactivePower
	}
	return 0
}

func (x *PowerData) GetPowerFactor() float32 {
	if x != nil {
		return x.PowerFactor
	}
	return 0
}

func (x *PowerData) GetEvent() []Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *PowerData) GetUtc() string {
	if x != nil {
		return x.Utc
	}
	return ""
}

type ReadPowerDataListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId []string `protobuf:"bytes,1,rep,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	PrevDate   string   `protobuf:"bytes,2,opt,name=prev_date,json=prevDate,proto3" json:"prev_date,omitempty"`
	NextDate   string   `protobuf:"bytes,3,opt,name=next_date,json=nextDate,proto3" json:"next_date,omitempty"`
	Interval   uint64   `protobuf:"varint,4,opt,name=interval,proto3" json:"interval,omitempty"`
}

func (x *ReadPowerDataListRequest) Reset() {
	*x = ReadPowerDataListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_control_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadPowerDataListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadPowerDataListRequest) ProtoMessage() {}

func (x *ReadPowerDataListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_main_control_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadPowerDataListRequest.ProtoReflect.Descriptor instead.
func (*ReadPowerDataListRequest) Descriptor() ([]byte, []int) {
	return file_main_control_proto_rawDescGZIP(), []int{12}
}

func (x *ReadPowerDataListRequest) GetCustomerId() []string {
	if x != nil {
		return x.CustomerId
	}
	return nil
}

func (x *ReadPowerDataListRequest) GetPrevDate() string {
	if x != nil {
		return x.PrevDate
	}
	return ""
}

func (x *ReadPowerDataListRequest) GetNextDate() string {
	if x != nil {
		return x.NextDate
	}
	return ""
}

func (x *ReadPowerDataListRequest) GetInterval() uint64 {
	if x != nil {
		return x.Interval
	}
	return 0
}

type ReadPowerDataListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PowerDataList []*PowerData `protobuf:"bytes,1,rep,name=power_data_list,json=powerDataList,proto3" json:"power_data_list,omitempty"`
}

func (x *ReadPowerDataListResponse) Reset() {
	*x = ReadPowerDataListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_control_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadPowerDataListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadPowerDataListResponse) ProtoMessage() {}

func (x *ReadPowerDataListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_main_control_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadPowerDataListResponse.ProtoReflect.Descriptor instead.
func (*ReadPowerDataListResponse) Descriptor() ([]byte, []int) {
	return file_main_control_proto_rawDescGZIP(), []int{13}
}

func (x *ReadPowerDataListResponse) GetPowerDataList() []*PowerData {
	if x != nil {
		return x.PowerDataList
	}
	return nil
}

type MomentData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentA     float32 `protobuf:"fixed32,1,opt,name=current_a,json=currentA,proto3" json:"current_a,omitempty"`
	VoltageA     float32 `protobuf:"fixed32,2,opt,name=voltage_a,json=voltageA,proto3" json:"voltage_a,omitempty"`
	VoltageThdA  float32 `protobuf:"fixed32,3,opt,name=voltage_thd_a,json=voltageThdA,proto3" json:"voltage_thd_a,omitempty"`
	PowerFactorA float32 `protobuf:"fixed32,4,opt,name=power_factor_a,json=powerFactorA,proto3" json:"power_factor_a,omitempty"`
	PhaseA       float32 `protobuf:"fixed32,5,opt,name=phase_a,json=phaseA,proto3" json:"phase_a,omitempty"`
	CurrentB     float32 `protobuf:"fixed32,6,opt,name=current_b,json=currentB,proto3" json:"current_b,omitempty"`
	VoltageB     float32 `protobuf:"fixed32,7,opt,name=voltage_b,json=voltageB,proto3" json:"voltage_b,omitempty"`
	VoltageThdB  float32 `protobuf:"fixed32,8,opt,name=voltage_thd_b,json=voltageThdB,proto3" json:"voltage_thd_b,omitempty"`
	PowerFactorB float32 `protobuf:"fixed32,9,opt,name=power_factor_b,json=powerFactorB,proto3" json:"power_factor_b,omitempty"`
	PhaseB       float32 `protobuf:"fixed32,10,opt,name=phase_b,json=phaseB,proto3" json:"phase_b,omitempty"`
	CurrentC     float32 `protobuf:"fixed32,11,opt,name=current_c,json=currentC,proto3" json:"current_c,omitempty"`
	VoltageC     float32 `protobuf:"fixed32,12,opt,name=voltage_c,json=voltageC,proto3" json:"voltage_c,omitempty"`
	VoltageThdC  float32 `protobuf:"fixed32,13,opt,name=voltage_thd_c,json=voltageThdC,proto3" json:"voltage_thd_c,omitempty"`
	PowerFactorC float32 `protobuf:"fixed32,14,opt,name=power_factor_c,json=powerFactorC,proto3" json:"power_factor_c,omitempty"`
	PhaseC       float32 `protobuf:"fixed32,15,opt,name=phase_c,json=phaseC,proto3" json:"phase_c,omitempty"`
	Temp         float32 `protobuf:"fixed32,16,opt,name=temp,proto3" json:"temp,omitempty"`
}

func (x *MomentData) Reset() {
	*x = MomentData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_control_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MomentData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MomentData) ProtoMessage() {}

func (x *MomentData) ProtoReflect() protoreflect.Message {
	mi := &file_main_control_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MomentData.ProtoReflect.Descriptor instead.
func (*MomentData) Descriptor() ([]byte, []int) {
	return file_main_control_proto_rawDescGZIP(), []int{14}
}

func (x *MomentData) GetCurrentA() float32 {
	if x != nil {
		return x.CurrentA
	}
	return 0
}

func (x *MomentData) GetVoltageA() float32 {
	if x != nil {
		return x.VoltageA
	}
	return 0
}

func (x *MomentData) GetVoltageThdA() float32 {
	if x != nil {
		return x.VoltageThdA
	}
	return 0
}

func (x *MomentData) GetPowerFactorA() float32 {
	if x != nil {
		return x.PowerFactorA
	}
	return 0
}

func (x *MomentData) GetPhaseA() float32 {
	if x != nil {
		return x.PhaseA
	}
	return 0
}

func (x *MomentData) GetCurrentB() float32 {
	if x != nil {
		return x.CurrentB
	}
	return 0
}

func (x *MomentData) GetVoltageB() float32 {
	if x != nil {
		return x.VoltageB
	}
	return 0
}

func (x *MomentData) GetVoltageThdB() float32 {
	if x != nil {
		return x.VoltageThdB
	}
	return 0
}

func (x *MomentData) GetPowerFactorB() float32 {
	if x != nil {
		return x.PowerFactorB
	}
	return 0
}

func (x *MomentData) GetPhaseB() float32 {
	if x != nil {
		return x.PhaseB
	}
	return 0
}

func (x *MomentData) GetCurrentC() float32 {
	if x != nil {
		return x.CurrentC
	}
	return 0
}

func (x *MomentData) GetVoltageC() float32 {
	if x != nil {
		return x.VoltageC
	}
	return 0
}

func (x *MomentData) GetVoltageThdC() float32 {
	if x != nil {
		return x.VoltageThdC
	}
	return 0
}

func (x *MomentData) GetPowerFactorC() float32 {
	if x != nil {
		return x.PowerFactorC
	}
	return 0
}

func (x *MomentData) GetPhaseC() float32 {
	if x != nil {
		return x.PhaseC
	}
	return 0
}

func (x *MomentData) GetTemp() float32 {
	if x != nil {
		return x.Temp
	}
	return 0
}

type ReadMomentDataListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId []string `protobuf:"bytes,1,rep,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	PrevDate   string   `protobuf:"bytes,2,opt,name=prev_date,json=prevDate,proto3" json:"prev_date,omitempty"`
	NextDate   string   `protobuf:"bytes,3,opt,name=next_date,json=nextDate,proto3" json:"next_date,omitempty"`
	Interval   uint64   `protobuf:"varint,4,opt,name=interval,proto3" json:"interval,omitempty"`
}

func (x *ReadMomentDataListRequest) Reset() {
	*x = ReadMomentDataListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_control_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadMomentDataListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadMomentDataListRequest) ProtoMessage() {}

func (x *ReadMomentDataListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_main_control_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadMomentDataListRequest.ProtoReflect.Descriptor instead.
func (*ReadMomentDataListRequest) Descriptor() ([]byte, []int) {
	return file_main_control_proto_rawDescGZIP(), []int{15}
}

func (x *ReadMomentDataListRequest) GetCustomerId() []string {
	if x != nil {
		return x.CustomerId
	}
	return nil
}

func (x *ReadMomentDataListRequest) GetPrevDate() string {
	if x != nil {
		return x.PrevDate
	}
	return ""
}

func (x *ReadMomentDataListRequest) GetNextDate() string {
	if x != nil {
		return x.NextDate
	}
	return ""
}

func (x *ReadMomentDataListRequest) GetInterval() uint64 {
	if x != nil {
		return x.Interval
	}
	return 0
}

type ReadMomentDataListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MomentDataList []*MomentData `protobuf:"bytes,1,rep,name=moment_data_list,json=momentDataList,proto3" json:"moment_data_list,omitempty"`
}

func (x *ReadMomentDataListResponse) Reset() {
	*x = ReadMomentDataListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_main_control_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadMomentDataListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadMomentDataListResponse) ProtoMessage() {}

func (x *ReadMomentDataListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_main_control_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadMomentDataListResponse.ProtoReflect.Descriptor instead.
func (*ReadMomentDataListResponse) Descriptor() ([]byte, []int) {
	return file_main_control_proto_rawDescGZIP(), []int{16}
}

func (x *ReadMomentDataListResponse) GetMomentDataList() []*MomentData {
	if x != nil {
		return x.MomentDataList
	}
	return nil
}

var File_main_control_proto protoreflect.FileDescriptor

var file_main_control_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xd5, 0x01, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61, 0x63,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x61, 0x6e, 0x75,
	0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x41, 0x64, 0x64, 0x72,
	0x12, 0x15, 0x0a, 0x06, 0x6e, 0x65, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x70, 0x22, 0x85, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x61, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x37, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x22, 0x85, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x61, 0x6e, 0x75, 0x66,
	0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x37, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x13, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x0a, 0x11, 0x52, 0x65, 0x61,
	0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x41, 0x0a, 0x12, 0x52, 0x65, 0x61, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x52, 0x65, 0x61, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4e, 0x0a, 0x16, 0x52,
	0x65, 0x61, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x9a, 0x02, 0x0a, 0x09,
	0x50, 0x6f, 0x77, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x77, 0x65, 0x72,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x15, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x72, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x13, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x72, 0x75, 0x74, 0x68,
	0x5f, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x74, 0x72, 0x75, 0x74, 0x68, 0x52, 0x65, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6f, 0x77,
	0x65, 0x72, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0b, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x74, 0x63, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x74, 0x63, 0x22, 0x91, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x61,
	0x64, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x65, 0x76, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x22, 0x5b, 0x0a, 0x19,
	0x52, 0x65, 0x61, 0x64, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0f, 0x70, 0x6f, 0x77,
	0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x2e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x70, 0x6f, 0x77, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xf7, 0x03, 0x0a, 0x0a, 0x4d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x41, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65,
	0x5f, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67,
	0x65, 0x41, 0x12, 0x22, 0x0a, 0x0d, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x68,
	0x64, 0x5f, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x76, 0x6f, 0x6c, 0x74, 0x61,
	0x67, 0x65, 0x54, 0x68, 0x64, 0x41, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f,
	0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x12, 0x17, 0x0a, 0x07,
	0x70, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x70,
	0x68, 0x61, 0x73, 0x65, 0x41, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x62, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x42, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x42, 0x12,
	0x22, 0x0a, 0x0d, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x68, 0x64, 0x5f, 0x62,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x54,
	0x68, 0x64, 0x42, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x66, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x5f, 0x62, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x70, 0x6f, 0x77,
	0x65, 0x72, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x42, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x68, 0x61,
	0x73, 0x65, 0x5f, 0x62, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x70, 0x68, 0x61, 0x73,
	0x65, 0x42, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x12,
	0x1b, 0x0a, 0x09, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x08, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x43, 0x12, 0x22, 0x0a, 0x0d,
	0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x68, 0x64, 0x5f, 0x63, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0b, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x54, 0x68, 0x64, 0x43,
	0x12, 0x24, 0x0a, 0x0e, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x5f, 0x63, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x46,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x68, 0x61, 0x73, 0x65, 0x5f,
	0x63, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x70, 0x68, 0x61, 0x73, 0x65, 0x43, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x65, 0x6d, 0x70, 0x18, 0x10, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x74,
	0x65, 0x6d, 0x70, 0x22, 0x92, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x65, 0x76, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x22, 0x5f, 0x0a, 0x1a, 0x52, 0x65, 0x61, 0x64,
	0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x10, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x4d,
	0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x2a, 0x4d, 0x0a, 0x05, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x41, 0x54, 0x54, 0x45, 0x52, 0x59, 0x10, 0x00, 0x12,
	0x0f, 0x0a, 0x0b, 0x4c, 0x4f, 0x57, 0x5f, 0x56, 0x4f, 0x4c, 0x54, 0x41, 0x47, 0x45, 0x10, 0x01,
	0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x02,
	0x12, 0x16, 0x0a, 0x12, 0x4d, 0x41, 0x47, 0x4e, 0x45, 0x54, 0x49, 0x43, 0x5f, 0x44, 0x45, 0x54,
	0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x32, 0xef, 0x06, 0x0a, 0x0b, 0x4d, 0x61, 0x69,
	0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x73, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x20, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d,
	0x61, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6a, 0x0a,
	0x0a, 0x52, 0x65, 0x61, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x2f,
	0x76, 0x31, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7b, 0x0a, 0x0e, 0x52, 0x65, 0x61,
	0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x52, 0x65,
	0x61, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x73, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x20, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x1a, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x69,
	0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x73, 0x0a, 0x0c, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x20, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x6d, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x2a, 0x13, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x88, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x61, 0x64, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x6d, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x61, 0x64,
	0x50, 0x6f, 0x77, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x77, 0x65,
	0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x8c, 0x01, 0x0a, 0x12,
	0x52, 0x65, 0x61, 0x64, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x26, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x2e, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x65, 0x0a, 0x1d, 0x6e, 0x65,
	0x74, 0x2e, 0x69, 0x6a, 0x6f, 0x6f, 0x6e, 0x2e, 0x69, 0x6f, 0x74, 0x65, 0x63, 0x68, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x42, 0x10, 0x4d, 0x61, 0x69,
	0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x50, 0x61, 0x72, 0x6b,
	0x42, 0x79, 0x65, 0x6f, 0x6e, 0x67, 0x4b, 0x65, 0x75, 0x6e, 0x2f, 0x69, 0x6f, 0x74, 0x65, 0x63,
	0x68, 0x2d, 0x69, 0x64, 0x6c, 0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_main_control_proto_rawDescOnce sync.Once
	file_main_control_proto_rawDescData = file_main_control_proto_rawDesc
)

func file_main_control_proto_rawDescGZIP() []byte {
	file_main_control_proto_rawDescOnce.Do(func() {
		file_main_control_proto_rawDescData = protoimpl.X.CompressGZIP(file_main_control_proto_rawDescData)
	})
	return file_main_control_proto_rawDescData
}

var file_main_control_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_main_control_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_main_control_proto_goTypes = []interface{}{
	(Event)(0),                         // 0: maincontrol.Event
	(*Device)(nil),                     // 1: maincontrol.Device
	(*CreateDeviceRequest)(nil),        // 2: maincontrol.CreateDeviceRequest
	(*CreateDeviceResponse)(nil),       // 3: maincontrol.CreateDeviceResponse
	(*UpdateDeviceRequest)(nil),        // 4: maincontrol.UpdateDeviceRequest
	(*UpdateDeviceResponse)(nil),       // 5: maincontrol.UpdateDeviceResponse
	(*DeleteDeviceRequest)(nil),        // 6: maincontrol.DeleteDeviceRequest
	(*DeleteDeviceResponse)(nil),       // 7: maincontrol.DeleteDeviceResponse
	(*ReadDeviceRequest)(nil),          // 8: maincontrol.ReadDeviceRequest
	(*ReadDeviceResponse)(nil),         // 9: maincontrol.ReadDeviceResponse
	(*ReadDeviceListRequest)(nil),      // 10: maincontrol.ReadDeviceListRequest
	(*ReadDeviceListResponse)(nil),     // 11: maincontrol.ReadDeviceListResponse
	(*PowerData)(nil),                  // 12: maincontrol.PowerData
	(*ReadPowerDataListRequest)(nil),   // 13: maincontrol.ReadPowerDataListRequest
	(*ReadPowerDataListResponse)(nil),  // 14: maincontrol.ReadPowerDataListResponse
	(*MomentData)(nil),                 // 15: maincontrol.MomentData
	(*ReadMomentDataListRequest)(nil),  // 16: maincontrol.ReadMomentDataListRequest
	(*ReadMomentDataListResponse)(nil), // 17: maincontrol.ReadMomentDataListResponse
}
var file_main_control_proto_depIdxs = []int32{
	1,  // 0: maincontrol.ReadDeviceResponse.device:type_name -> maincontrol.Device
	1,  // 1: maincontrol.ReadDeviceListResponse.device_list:type_name -> maincontrol.Device
	0,  // 2: maincontrol.PowerData.event:type_name -> maincontrol.Event
	12, // 3: maincontrol.ReadPowerDataListResponse.power_data_list:type_name -> maincontrol.PowerData
	15, // 4: maincontrol.ReadMomentDataListResponse.moment_data_list:type_name -> maincontrol.MomentData
	2,  // 5: maincontrol.MainControl.CreateDevice:input_type -> maincontrol.CreateDeviceRequest
	8,  // 6: maincontrol.MainControl.ReadDevice:input_type -> maincontrol.ReadDeviceRequest
	10, // 7: maincontrol.MainControl.ReadDeviceList:input_type -> maincontrol.ReadDeviceListRequest
	4,  // 8: maincontrol.MainControl.UpdateDevice:input_type -> maincontrol.UpdateDeviceRequest
	6,  // 9: maincontrol.MainControl.DeleteDevice:input_type -> maincontrol.DeleteDeviceRequest
	13, // 10: maincontrol.MainControl.ReadPowerDataList:input_type -> maincontrol.ReadPowerDataListRequest
	16, // 11: maincontrol.MainControl.ReadMomentDataList:input_type -> maincontrol.ReadMomentDataListRequest
	3,  // 12: maincontrol.MainControl.CreateDevice:output_type -> maincontrol.CreateDeviceResponse
	9,  // 13: maincontrol.MainControl.ReadDevice:output_type -> maincontrol.ReadDeviceResponse
	11, // 14: maincontrol.MainControl.ReadDeviceList:output_type -> maincontrol.ReadDeviceListResponse
	5,  // 15: maincontrol.MainControl.UpdateDevice:output_type -> maincontrol.UpdateDeviceResponse
	7,  // 16: maincontrol.MainControl.DeleteDevice:output_type -> maincontrol.DeleteDeviceResponse
	14, // 17: maincontrol.MainControl.ReadPowerDataList:output_type -> maincontrol.ReadPowerDataListResponse
	17, // 18: maincontrol.MainControl.ReadMomentDataList:output_type -> maincontrol.ReadMomentDataListResponse
	12, // [12:19] is the sub-list for method output_type
	5,  // [5:12] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_main_control_proto_init() }
func file_main_control_proto_init() {
	if File_main_control_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_main_control_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_control_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_control_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_control_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_control_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_control_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_control_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_control_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_control_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_control_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadDeviceListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_control_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadDeviceListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_control_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PowerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_control_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadPowerDataListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_control_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadPowerDataListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_control_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MomentData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_control_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadMomentDataListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_main_control_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadMomentDataListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_main_control_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_main_control_proto_goTypes,
		DependencyIndexes: file_main_control_proto_depIdxs,
		EnumInfos:         file_main_control_proto_enumTypes,
		MessageInfos:      file_main_control_proto_msgTypes,
	}.Build()
	File_main_control_proto = out.File
	file_main_control_proto_rawDesc = nil
	file_main_control_proto_goTypes = nil
	file_main_control_proto_depIdxs = nil
}
